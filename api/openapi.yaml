openapi: 3.0.3
info:
  title: SSI Bridge API
  description: |
    SSI eIDAS Bridge API is a component linking the European
    Trust and Legal Framework, named eIDAS (electronic IDentification,
    Authentication and trust Services), with the Self-Sovereign Identification
    (SSI) global trust framework, based on Decentralized Identifiers, or DIDs.
  version: 1.0.0
  termsOfService: "/docs/terms"
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://api.vidchain.net
    description: Validated ID API 
  - url: https://dev.vidchain.net
    description: Validated ID API Dev
tags:
  - name: eIDAS Bridge
    description: Sign and validate signatures
paths:
  /eidas-bridge/v1/signatures:
    post:
      tags:
        - eIDAS Bridge
      summary: Creates a JWT ES256K eIDAS eSeal signature
      description: "Creates a JWT ES256K eIDAS eSeal signature"
      operationId: post-eidas-bridge-v1-signatures
      requestBody:
        description: |
          It requires the following fields:
          - **issuer**: DID of the issuer
          - **type**: Type of signature
          - **payload**: Payload to sign
        content:
          application/json:
            schema:
              required:
                - issuer
                - type
                - payload
              type: object
              properties:
                issuer:
                  description: DID of the Issuer
                  type: string
                type:
                  description: Type of signature
                  type: string
                payload:
                  description: Payload to sign
                  type: object
            examples:
              Empty Payload:
                value:
                  issuer: did:vid:0xB551b70d650892d23dE3Be201A95c1FcBea98A3D
                  type: EidasSeal2019
                  payload: {}
              Complete Payload:
                value:
                  issuer: did:vid:0xB551b70d650892d23dE3Be201A95c1FcBea98A3D
                  type: EidasSeal2019
                  payload:
                    "@context":
                      - "https://www.w3.org/2018/credentials/v1"
                      - "https://api.vidchain.net/credentials/verifiableId/v1"
                    id: "vid:type-version-of-the-credential"
                    type: "['VerifiableCredential','VerifiableID']"
                    issuer: "did:vid:0x5208431C6EC2ec4097aeA7182bB92d018766498c"
                    issuanceDate: "2019-06-22T14:11:44Z"
                    expirationDate: "2019-06-22T14:11:44Z"
                    credentialSubject:
                      id: "did:vid:0x8707CCa835C961334D3F6450C6a61a0AD6592460"
                      firstName: "Eva"
                      lastName: "Monroe"
                      gender: "Female"
                      dateOfBirth: "12/11/1970"
                      placeOfBirth: "Madrid"
                      currentAddress: "Arago 179 4a"
                      city: "Barcelona"
                      state: "Catalunya"
                      zip: "08011"
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignatureResponse"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
              examples:
                Bad Request:
                  $ref: "#/components/examples/BadRequest"
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
              examples:
                Unauthorized:
                  $ref: "#/components/examples/Unauthorized"
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
              examples:
                Forbidden:
                  $ref: "#/components/examples/Forbidden"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
              examples:
                Internal Server Error:
                  $ref: "#/components/examples/InternalError"
  /eidas-bridge/v1/signature-validations:
    post:
      tags:
        - eIDAS Bridge
      summary: Validates a JWT ES256K eIDAS eSeal signature
      description: "Validates a JWT ES256K eIDAS eSeal signature"
      operationId: post-eidas-bridge-v1-signature-validations
      requestBody:
        description: Include in the body the proof to validate
        content:
          application/json:
            schema:
              required:
                - proof
              type: object
              properties:
                proof:
                  $ref: "#/components/schemas/Proof"
        required: true
      responses:
        "204":
          description: Valid
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
              examples:
                Bad Request:
                  $ref: "#/components/examples/BadRequest"
        "401":
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
              examples:
                Unauthorized:
                  $ref: "#/components/examples/Unauthorized"
        "403":
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
              examples:
                Forbidden:
                  $ref: "#/components/examples/Forbidden"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
              examples:
                Internal Server Error:
                  $ref: "#/components/examples/InternalError"
components:
  schemas:
    Proof:
      description: |
        One or more cryptographic proofs that can be used to detect tampering
        and verify the authorship of a credential or presentation.
      type: object
      properties:
        type:
          description: Type of signature
          type: string
          example: EidasSeal2019
        created:
          description: Creation time
          type: string
          example: "2019-06-22T14:11:44Z"
        proofPurpose:
          description: Purpose of the proof
          type: string
          example: assertionMethod
        verificationMethod:
          description: Verification method
          type: string
          example: "did:vid:0xB551b70...98A3D#eidasKey"
        jws:
          description: JSON Web Signature
          type: string
          example: eyJ...Wuc
    SignatureResponse:
      type: object
      title: Signature Response
      properties:
        issuer:
          description: DID of the issuer
          type: string
          example: did:vid:0xB551b70d650892d23dE3Be201A95c1FcBea98A3D
        type: 
          description: Credential type
          type: string
          example: EidasSeal2019
        payload:
          description: Payload to sign
          type: object
          example: 
            "@context":
              - "https://www.w3.org/2018/credentials/v1"
              - "https://api.vidchain.net/credentials/verifiableId/v1"
            id: "vid:type-version-of-the-credential"
            type: "['VerifiableCredential','VerifiableID']"
            issuer: "did:vid:0x5208431C6EC2ec4097aeA7182bB92d018766498c"
            issuanceDate: "2019-06-22T14:11:44Z"
            expirationDate: "2019-06-22T14:11:44Z"
            credentialSubject:
              id: "did:vid:0x8707CCa835C961334D3F6450C6a61a0AD6592460"
              firstName: "Eva"
              lastName: "Monroe"
              gender: "Female"
              dateOfBirth: "12/11/1970"
              placeOfBirth: "Madrid"
              currentAddress: "Arago 179 4a"
              city: "Barcelona"
              state: "Catalunya"
              zip: "08011"
        proof:
          $ref: "#/components/schemas/Proof"
    Problem:
      description: A Problem Details object (RFC 7807)
      type: object
      properties:
        type:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the problem type. When dereferenced,
            it SHOULD provide human-readable documentation for the problem type.
          default: "about:blank"
        title:
          type: string
          description: |
            A short summary of the problem type.
          example: Internal Server Error
        status:
          type: integer
          format: int32
          description: |
            The HTTP status code generated by the origin server for this occurrence of the problem.
          minimum: 400
          maximum: 600
          exclusiveMaximum: true
          example: 500
        detail:
          type: string
          description: |
            A human readable explanation specific to this occurrence of the problem.
          example: Connection timeout
        instance:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
  examples:
    BadRequest:
      value:
        title: Bad Request
        status: 400
        detail: Bad request
    InvalidToken:
      value:
        title: Bad Request
        status: 400
        detail: Invalid token
    Unauthorized:
      value:
        title: Unauthorized
        status: 401
        detail: Unauthorized
    IssuerNotFound:
      value:
        title: Issuer Not Found
        status: 400
        detail: Issuer not found in the list of trusted apps.
    Forbidden:
      value:
        title: Forbidden
        status: 403
        detail: Forbidden
    ExpiredToken:
      value:
        title: Token Expired
        status: 400
        detail: The token has expired.
    InternalError:
      value:
        title: Internal Server Error
        status: 500
        detail: |
          The server encountered an internal error and was unable to complete
          your request
